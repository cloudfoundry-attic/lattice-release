#!/bin/bash
set -e

setup_ssh_access_to_github() {
    echo "Running ssh-agent"
    eval `ssh-agent`
    aws s3 cp s3://lattice-gocd/credentials/ci_key ci_key
    chmod 600 ci_key
    ssh-add ci_key
}

sync_up_tags_off_remote() {
    pushd $LATTICE_SRC_PATH > /dev/null
        git tag -l | xargs git tag -d
        git fetch --tags
    popd > /dev/null
}

setup_go_env() {
    mkdir ~/go
    export GOPATH=~/go
    export PATH="$PATH:$GOPATH/bin"

    OUTDIR="$HOME/compiled-binaries"
    mkdir -p $OUTDIR && sync
}

copy_ltc_source_into_gopath() {
    mkdir -p $GOPATH/src/github.com/cloudfoundry-incubator/lattice/
    echo -n "Copying $LATTICE_SRC_PATH/ltc into compilation GOPATH .."
    cp -af $LATTICE_SRC_PATH/ltc $GOPATH/src/github.com/cloudfoundry-incubator/lattice/ && echo "DONE!"

    echo -n "Copying $LATTICE_SRC_PATH/.git* into compilation GOPATH .."
    cp -af $LATTICE_SRC_PATH/.git* $GOPATH/src/github.com/cloudfoundry-incubator/lattice/ && echo "DONE!"
}

get_lattice_version() {
    if [ -z "${LATTICE_RELEASE_VERSION}" ]; then
        pushd $LATTICE_SRC_PATH > /dev/null
            lattice_version=$(cat Version)
        popd > /dev/null
    else
        lattice_version="${LATTICE_RELEASE_VERSION}"
    fi
}

git_describe_lattice() {
    if [ -z "${LATTICE_RELEASE_VERSION}" ]; then
        pushd $LATTICE_SRC_PATH > /dev/null
            lattice_version=$(git describe --always)
        popd > /dev/null
    else
        lattice_version="${LATTICE_RELEASE_VERSION}"
    fi
}

get_diego_release_git_sha() {
    pushd $DIEGO_RELEASE_PATH > /dev/null
        diego_release_git_sha="$(git rev-parse HEAD)" && echo "diego_release_git_sha=${diego_release_git_sha}"
    popd > /dev/null
}

construct_ltc_gopath() {

    if [[ -z "$LATTICE_SRC_PATH" ]] || [[ -z "$DIEGO_RELEASE_PATH" ]]; then
        echo "Must set LATTICE_SRC_PATH and DIEGO_RELEASE_PATH"
        exit 1
    fi

    copy_ltc_source_into_gopath

    pushd $GOPATH/src/github.com/cloudfoundry-incubator/lattice/ltc > /dev/null
        set +e      # continue on error
            echo "go getting ./... from $(pwd)"
            go get -d -v ./...

            ## TODO: go get docker/docker separately and unpack its vendored deps.
            cp -af Godeps/_workspace/src/github.com/docker/docker/vendor/src/* $GOPATH/src/

            godep restore && echo "godep restored"
        set -e      # abort on error
    popd > /dev/null

    echo -n "Deleting .git folders that are diego-release submodules .."
    pushd $GOPATH > /dev/null
        grep submodule $DIEGO_RELEASE_PATH/.gitmodules | awk -F\" '{ print $2"/.git" }' | xargs rm -rf
    popd > /dev/null
    echo "DONE!"

    echo -n "Copying $DIEGO_RELEASE_PATH/src/* into compilation GOPATH (Prefer Diego-Release dependencies over ltc's Godeps) .."
    ## locally, this copies all of lattice again because we usually develop lattice using diego-release as the GOPATH
    cp -af $DIEGO_RELEASE_PATH/src $GOPATH/ && echo "DONE!"

    echo -n "Copying over git modules for later godeps saves from constructed path .."
    cp -af $DIEGO_RELEASE_PATH/.git* $GOPATH/ && echo "DONE!"

    sync
}

run_unit_tests() {
    go get -v github.com/onsi/ginkgo/ginkgo

    echo "Running ltc unit tests..."
    $GOPATH/src/github.com/cloudfoundry-incubator/lattice/ltc/scripts/test
}

go_build_ltc() {
    export GOBIN="$OUTDIR"

    echo -n "Compiling cli ($lattice_version) .."
    GOARCH=amd64 GOOS=linux go build \
        -ldflags "-X github.com/cloudfoundry-incubator/lattice/ltc/setup_cli.latticeVersion $lattice_version" \
        -o $OUTDIR/ltc-linux-amd64 \
        github.com/cloudfoundry-incubator/lattice/ltc

    GOARCH=amd64 GOOS=darwin go build \
        -ldflags "-X github.com/cloudfoundry-incubator/lattice/ltc/setup_cli.latticeVersion $lattice_version" \
        -o $OUTDIR/ltc-darwin-amd64 \
        github.com/cloudfoundry-incubator/lattice/ltc
    echo "DONE!"

    unset GOBIN
}


godep_go_build_ltc() {
    echo -n "Compiling cli ($lattice_version) .."

    export GOBIN="$OUTDIR"
    pushd $LATTICE_SRC_PATH/ltc > /dev/null
        GOARCH=amd64 GOOS=linux godep go build \
            -ldflags "-X github.com/cloudfoundry-incubator/lattice/ltc/setup_cli.latticeVersion $lattice_version" \
            -o $OUTDIR/ltc-linux-amd64 \
            github.com/cloudfoundry-incubator/lattice/ltc

        GOARCH=amd64 GOOS=darwin godep go build \
            -ldflags "-X github.com/cloudfoundry-incubator/lattice/ltc/setup_cli.latticeVersion $lattice_version" \
            -o $OUTDIR/ltc-darwin-amd64 \
            github.com/cloudfoundry-incubator/lattice/ltc
    popd > /dev/null
    unset GOBIN

    echo "DONE!"
}

generate_ltc_tarball() {
    echo -n "Generating ltc-checksum = "
    pushd $LATTICE_SRC_PATH > /dev/null
        git rev-parse HEAD | tee $OUTDIR/ltc-checksum  #TODO: Do we even use the ltc-checksum anymore?
    popd > /dev/null
    sync

    echo -n "Creating ltc.tar.gz ($lattice_version) at $1 .."
    pushd $OUTDIR > /dev/null
        rm -f $1/ltc.tar.gz
        tar czf $1/ltc.tar.gz ltc* && echo "SUCCESS!"
    popd > /dev/null
}

bump_lattice_version() {
    git_describe_lattice

    pushd $LATTICE_SRC_PATH > /dev/null
        previous_lattice_version=$(cat Version)
        new_lattice_version="$lattice_version"

        echo "$new_lattice_version" > Version
        echo "Updating Version file: $previous_lattice_version -> $new_lattice_version"

        get_diego_release_git_sha
        echo "$diego_release_git_sha" > DIEGO_VERSION

        git add Version
        git add DIEGO_VERSION
        deliver_stories_message=$(extract_deliver_stories_message)

        git commit -m "Bump Version: $previous_lattice_version -> $new_lattice_version

        + Bump Version Files

        Diego Release Git SHA: $diego_release_git_sha

        $deliver_stories_message

        +Committed by GOCD- Run #$GO_PIPELINE_LABEL of Pipeline: $GO_PIPELINE_NAME, Stage: $GO_STAGE_NAME, JOB: $GO_JOB_NAME
        "
    popd > /dev/null
}

rewrite_terraform_examples() {
    git_describe_lattice

    pushd $LATTICE_SRC_PATH/terraform/aws/example > /dev/null
        sed -i 's/source = "github\.com.*$/source = "github\.com\/cloudfoundry-incubator\/lattice\/\/terraform\/\/aws\?ref='"$lattice_version"'"/' lattice.aws.tf
        git add lattice.aws.tf
    popd > /dev/null
    pushd $LATTICE_SRC_PATH/terraform/digitalocean/example > /dev/null
        sed -i 's/source = "github\.com.*$/source = "github\.com\/cloudfoundry-incubator\/lattice\/\/terraform\/\/digitalocean\?ref='"$lattice_version"'"/' lattice.digitalocean.tf
        git add lattice.digitalocean.tf
    popd > /dev/null
    pushd $LATTICE_SRC_PATH/terraform/google/example > /dev/null
        sed -i 's/source = "github\.com.*$/source = "github\.com\/cloudfoundry-incubator\/lattice\/\/terraform\/\/google\?ref='"$lattice_version"'"/' lattice.google.tf
        git add lattice.google.tf
    popd > /dev/null
}
