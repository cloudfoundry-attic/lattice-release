#!upstart

start on started bootstrap
stop on shutdown
respawn

script
    echo "UPSTART: Waiting for lattice to be ready - `date --rfc-3339=ns`"

    while [ ! -f /var/lattice/cell-ready ]; do
        sleep 1
    done

    echo "UPSTART: Trying to start garden-linux - `date --rfc-3339=ns`"

    export $(cat /var/lattice/setup/lattice-environment)

    #######
    # btrfs setup
    ###
    GARDEN_ROOT=/var/lattice/garden

    backing_store=$GARDEN_ROOT/garden_graph_backing_store
    loopback_device=/dev/garden_graph_root
    mount_point=$GARDEN_ROOT/graph

    if [ ! -f $backing_store ]; then
        echo "no backing store found at ${backing_store}: creating"

        btrfs_size=$(df --output=avail "$GARDEN_ROOT"|tail -1|perl -e 'print int(<> * 0.8)')

        dd of=$backing_store bs=1K seek=$btrfs_size count=0
        mkfs.btrfs $backing_store
    else
        echo "backing store already exists, skipping creation"
    fi

    if [ ! -f $loopback_device ]; then
        mknod $loopback_device b 7 200
        losetup $loopback_device $backing_store
    fi

    if cat /proc/mounts | grep $mount_point; then
        echo "btrfs already mounted at $mount_point"
    else
        echo "mounting btrfs volume"
        mkdir -p $mount_point
        mount -t btrfs $loopback_device $mount_point
    fi
    ###
    # btrfs setup
    #######

    tee2metron -dropsondeDestination=127.0.0.1:3457 -sourceInstance=$LATTICE_CELL_ID \
    garden-linux \
        -disableQuotas=true \
        -listenNetwork=tcp \
        -listenAddr=0.0.0.0:7777 \
        -externalIP=$GARDEN_EXTERNAL_IP \
        -denyNetworks= \
        -allowNetworks= \
        -bin=/var/lattice/garden/garden-bin \
        -depot=/var/lattice/garden/depot \
        -rootfs=/var/lattice/garden/rootfs \
        -graph=/var/lattice/garden/graph \
        -containerGraceTime=1h \
        -allowHostAccess=true \
        >> /var/lattice/log/garden-linux-service.log 2>&1
end script

post-stop exec sleep 5
