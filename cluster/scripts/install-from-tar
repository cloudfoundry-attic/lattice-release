#!/bin/bash

set -e

install_condenser() {
    set -x

    mkdir -p /var/lattice/lighttpd/blobs /var/lattice/etc
    chown -R www-data:www-data /var/lattice/lighttpd

    /etc/init.d/lighttpd stop

    if [ -n "$LATTICE_USERNAME" ]; then
        cp /tmp/lattice-build/common/webdav/lighttpd.conf-auth-enabled /etc/lighttpd/lighttpd.conf
        echo $LATTICE_USERNAME:$(openssl passwd -crypt $LATTICE_PASSWORD) > /var/lattice/etc/lighttpd.user
    else
        cp /tmp/lattice-build/common/webdav/lighttpd.conf-auth-disabled /etc/lighttpd/lighttpd.conf
    fi

    /etc/init.d/lighttpd start

    stage_cflinuxfs2_rootfs

    set +x 
    sleep 1
}

stage_cflinuxfs2_rootfs() {
    set -x

    declare -r rootfs_download_path=/vagrant/build/downloads
    if [ ! -f "$rootfs_download_path/cflinuxfs2.tar.gz" ]; then
        rm -f $rootfs_download_path/cflinuxfs2.tar.gz
        mkdir -p $rootfs_download_path
        wget http://cf-runtime-stacks.s3.amazonaws.com/cflinuxfs2.dev.tgz --quiet -O $rootfs_download_path/cflinuxfs2.tar.gz
        echo "Downloaded RootFS!"
    fi

    ## unpack to some fixed folder
    mkdir -p /var/lattice/rootfs/cflinuxfs2
    tar -xzf $rootfs_download_path/cflinuxfs2.tar.gz -C /var/lattice/rootfs/cflinuxfs2

    echo "Preloaded CFLinuxFS2 RootFS enabled."
}

COMPONENT_TO_INSTALL=$1
PATH_TO_LATTICE_TAR=$2
LATTICE_TAR_URL=$3

if [ $COMPONENT_TO_INSTALL != "cell" ] && [ $COMPONENT_TO_INSTALL != "brain" ] && [ $COMPONENT_TO_INSTALL != "collocated" ]; then
    echo "Incorrect Usage. Must install either cell or brain or both.
    Usage: install-from-tar cell [LATTICE_TAR_PATH] OR
           install-from-tar brain [LATTICE_TAR_PATH]
           install-from-tar collocated [LATTICE_TAR_PATH]
    "
    exit 2
fi

if [ -z "${PATH_TO_LATTICE_TAR}" ] && [ -n "${LATTICE_TAR_URL}" ]; then
    PATH_TO_LATTICE_TAR=/tmp/lattice.tgz
    echo -n "Downloading $LATTICE_TAR_URL .."
    wget $LATTICE_TAR_URL --quiet -O $PATH_TO_LATTICE_TAR && echo "DONE!"
    ## TODO: check for 404, default to latest unstable build
elif [ -z "${PATH_TO_LATTICE_TAR}" ]; then
    PATH_TO_LATTICE_TAR=/tmp/lattice.tgz
    LATTICE_TAR_URL="https://s3-us-west-2.amazonaws.com/lattice/unstable/latest/lattice.tgz"
    echo -n "Downloading $LATTICE_TAR_URL .."
    wget $LATTICE_TAR_URL --quiet -O $PATH_TO_LATTICE_TAR && echo "DONE!"
fi

tar -xf $PATH_TO_LATTICE_TAR -C /tmp

/tmp/lattice-build/scripts/install-common


# check for opt-in to condenser 
export $(cat /var/lattice/setup/lattice-environment)
if [[ -n "$CONDENSER_ON" ]]; then
    install_condenser
elif [[ -n "$DOWNLOAD_ROOTFS" ]]; then
    stage_cflinuxfs2_rootfs
fi

if [ $COMPONENT_TO_INSTALL == "collocated" ]; then
    /tmp/lattice-build/scripts/install-brain

    #Stop consul and bootstrap in collocated install so we can trigger dependencies to fire off the single bootstrap script
    #once the cell is installed too.
    stop consul
    stop bootstrap

    sleep 2

    /tmp/lattice-build/scripts/install-cell
else
    /tmp/lattice-build/scripts/install-$COMPONENT_TO_INSTALL
fi

